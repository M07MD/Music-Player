{"version":3,"sources":["components/Player.jsx","components/Song.jsx","components/Nav.jsx","data.js","App.js","reportWebVitals.js","index.js","components/LibrarySong.jsx","components/Library.jsx"],"names":["Player","currentSong","setCurrentSong","isPlaying","setIsPlaying","audioRef","songInfo","timeUpdateHandler","setSongInfo","songs","setSongs","useEffect","newSongs","map","song","id","active","getTime","time","Math","floor","slice","skipTrackHandler","direction","a","currentIndex","findIndex","length","current","play","trackAnim","transform","animationPercentage","className","currentTime","style","background","color","min","max","duration","value","onChange","e","target","type","onClick","size","icon","faAngleLeft","faPause","faPlay","pause","faAngleRight","Song","src","cover","alt","name","artist","Nav","libraryStatus","setLibraryStatus","faMusic","chillHop","uuidv4","audio","require","default","Library","App","useState","data","useRef","roundedCurrent","round","roundedDuration","animation","songEndHandler","newIndex","onLoadedMetadata","onTimeUpdate","ref","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","LibrarySong","songSelectHandler","selectedSong","filter","state"],"mappings":"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","file":"static/js/main.0cadf64e.chunk.js","sourcesContent":["import { useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPlay,\r\n  faAngleLeft,\r\n  faAngleRight,\r\n  faPause,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Player = ({\r\n  currentSong,\r\n  setCurrentSong,\r\n  isPlaying,\r\n  setIsPlaying,\r\n  audioRef,\r\n  timeUpdateHandler,\r\n  songInfo,\r\n  setSongInfo,\r\n  songs,\r\n  setSongs,\r\n}) => {\r\n  //useEffect\r\n  useEffect(() => {\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === currentSong.id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n    setSongs(newSongs);\r\n  }, [currentSong]);\r\n\r\n  // Event Handlers\r\n  const playSongHandler = () => {\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n      setIsPlaying(!isPlaying);\r\n    } else {\r\n      audioRef.current.play();\r\n      setIsPlaying(!isPlaying);\r\n    }\r\n  };\r\n\r\n  const getTime = (time) => {\r\n    return (\r\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  };\r\n\r\n  const dragHandler = (e) => {\r\n    audioRef.current.currentTime = e.target.value;\r\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\r\n  };\r\n\r\n  const skipTrackHandler = async (direction) => {\r\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n    if (direction === \"skip-forward\") {\r\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n    }\r\n    if (direction === \"skip-back\") {\r\n      if ((currentIndex - 1) % songs.length === -1) {\r\n        await setCurrentSong(songs[songs.length - 1]);\r\n        if (isPlaying) audioRef.current.play();\r\n        return;\r\n      }\r\n      await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\r\n    }\r\n    if (isPlaying) audioRef.current.play();\r\n  };\r\n\r\n  // Add Styles\r\n  const trackAnim = {\r\n    transform: `translateX(${songInfo.animationPercentage}%)`,\r\n  };\r\n\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"time_control\">\r\n        <p>{getTime(songInfo.currentTime)}</p>\r\n        <div\r\n          style={{\r\n            background: `linear-gradient(to right, ${currentSong.color[0]} , ${currentSong.color[1]})`,\r\n          }}\r\n          className=\"track\">\r\n          <input\r\n            min={0}\r\n            max={songInfo.duration || 0}\r\n            value={songInfo.currentTime}\r\n            onChange={dragHandler}\r\n            type=\"range\"\r\n          />\r\n\r\n          <div style={trackAnim} className=\"animate_track\"></div>\r\n        </div>\r\n        <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\r\n      </div>\r\n      <div className=\"play_control\">\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrackHandler(\"skip-back\")}\r\n          className=\"skip_back\"\r\n          size=\"2x\"\r\n          icon={faAngleLeft}\r\n        />\r\n\r\n        <FontAwesomeIcon\r\n          icon={isPlaying ? faPause : faPlay}\r\n          onClick={playSongHandler}\r\n          className=\"play\"\r\n          size=\"2x\"\r\n        />\r\n\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrackHandler(\"skip-forward\")}\r\n          className=\"skip_forward\"\r\n          size=\"2x\"\r\n          icon={faAngleRight}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","const Song = ({ currentSong }) => {\r\n  return (\r\n    <div className=\"song_container\">\r\n      <img src={currentSong.cover} alt={currentSong.name} />\r\n      <h2>{currentSong.name}</h2>\r\n      <h3>{currentSong.artist}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Song;\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMusic } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nav = ({ libraryStatus, setLibraryStatus }) => {\r\n  return (\r\n    <nav>\r\n      <h1>Waves</h1>\r\n      <button onClick={() => setLibraryStatus(!libraryStatus)}>\r\n        Library\r\n        <FontAwesomeIcon icon={faMusic} />\r\n      </button>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import { v4 as uuidv4 } from \"uuid\";\r\n\r\nfunction chillHop() {\r\n  return [\r\n    {\r\n      name: \"Wildlife\",\r\n      artist: \"Philanthrope, chromonicci\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/2899f7cc22ab12e17d0119819aac3ca9dbab46e6-1024x1024.jpg\",\r\n      id: uuidv4(),\r\n      active: true,\r\n      color: [\"#8a302d\", \"#e06c3d\"],\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10263\",\r\n    },\r\n    {\r\n      name: \"Upstate\",\r\n      artist: \"Philanthrope, Brock Berrigan, The Field Tapes\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/2899f7cc22ab12e17d0119819aac3ca9dbab46e6-1024x1024.jpg\",\r\n      id: uuidv4(),\r\n      active: false,\r\n      color: [\"#8a302d\", \"#e06c3d\"],\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10245\",\r\n    },\r\n    {\r\n      name: \"Still Life Dreamtime\",\r\n      artist: \"Aviino\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/10/23fdd99adc3e16abcb67b004ea3e748ebf433a49-1024x1024.jpg\",\r\n      id: uuidv4(),\r\n      active: false,\r\n      color: [\"#97b5eb\", \"#212e5d\"],\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10459\",\r\n    },\r\n    {\r\n      name: \"Sleepover\",\r\n      artist: \"Nymano, JK the Sage\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/09fb436604242df99f84b9f359acb046e40d2e9e-1024x1024.jpg\",\r\n      id: uuidv4(),\r\n      active: false,\r\n      color: [\"#a36f86\", \"#534d7b\"],\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10130\",\r\n    },\r\n    {\r\n      name: \"Beaver Creek\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      id: uuidv4(),\r\n      active: false,\r\n      color: [\"#28c6b6\", \"#042b3f\"],\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10076\",\r\n    },\r\n    {\r\n      name: \"Paraglider\",\r\n      artist: \"Kendall Miles, H E R B\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/4fac6bb3a32f9e76b465990ba8d97d7db8a372f5-1024x1024.jpg\",\r\n      id: uuidv4(),\r\n      active: false,\r\n      color: [\"#fdbb59\", \"#c0512a\"],\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9318\",\r\n    },\r\n    {\r\n      name: \"Daydream\",\r\n      artist: \"Aiguille\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n      id: uuidv4(),\r\n      active: false,\r\n      color: [\"#f5bead\", \"#7865a5\"],\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9275\",\r\n    },\r\n    {\r\n      name: \"Caffeine\",\r\n      artist: \"Blue Wednesday, Felty\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/858b533ba20ff95bf5b401089b195d1a8cb43870-1024x1024.jpg\",\r\n      id: uuidv4(),\r\n      active: false,\r\n      color: [\"#9cc8e1\", \"#151e41\"],\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9334\",\r\n    },\r\n  ];\r\n}\r\n\r\nexport default chillHop;\r\n","// import hooks\nimport { useState, useRef } from \"react\";\n\n// import styles\nimport \"./styles/style.css\";\n\n// import utils\nimport data from \"./data\";\n\n// Adding components\nconst { default: Player } = require(\"./components/Player\");\nconst { default: Song } = require(\"./components/Song\");\nconst { default: Library } = require(\"./components/Library\");\nconst { default: Nav } = require(\"./components/Nav\");\n\nfunction App() {\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0,\n  });\n  const [libraryStatus, setLibraryStatus] = useState(false);\n\n  // Ref\n  const audioRef = useRef(null);\n\n  // Event Handlers\n  const timeUpdateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    const roundedCurrent = Math.round(current);\n    const roundedDuration = Math.round(duration);\n    const animation = Math.round((roundedCurrent / roundedDuration) * 100);\n    setSongInfo({\n      ...songInfo,\n      currentTime: current,\n      duration,\n      animationPercentage: animation,\n    });\n  };\n\n  const songEndHandler = async () => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    const newIndex = (currentIndex + 1) % songs.length;\n    await setCurrentSong(songs[newIndex]);\n    if (isPlaying) audioRef.current.play();\n  };\n\n  return (\n    <div className={`App ${libraryStatus ? \"library_active\" : \"\"}`}>\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n      <Song currentSong={currentSong} />\n      <Player\n        audioRef={audioRef}\n        isPlaying={isPlaying}\n        setIsPlaying={setIsPlaying}\n        currentSong={currentSong}\n        setCurrentSong={setCurrentSong}\n        timeUpdateHandler={timeUpdateHandler}\n        songInfo={songInfo}\n        setSongInfo={setSongInfo}\n        songs={songs}\n        setSongs={setSongs}\n      />\n      <Library\n        audioRef={audioRef}\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        isPlaying={isPlaying}\n        setSongs={setSongs}\n        libraryStatus={libraryStatus}\n      />\n      <audio\n        onLoadedMetadata={timeUpdateHandler}\n        onTimeUpdate={timeUpdateHandler}\n        ref={audioRef}\n        src={currentSong.audio}\n        onEnded={songEndHandler}></audio>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","const LibrarySong = ({\r\n  song,\r\n  songs,\r\n  setCurrentSong,\r\n  id,\r\n  audioRef,\r\n  isPlaying,\r\n  setSongs,\r\n}) => {\r\n  const songSelectHandler = async () => {\r\n    const selectedSong = songs.filter((state) => state.id === id);\r\n    await setCurrentSong(selectedSong[0]);\r\n\r\n    // Add Active State\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n    setSongs(newSongs);\r\n\r\n    // check if the song is playing\r\n    if (isPlaying) audioRef.current.play();\r\n  };\r\n\r\n  return (\r\n    <div\r\n      onClick={songSelectHandler}\r\n      className={`library_song ${song.active ? \"selected\" : \" \"}`}>\r\n      <img src={song.cover} alt={song.name} />\r\n      <div className=\"song_description\">\r\n        <h3>{song.name}</h3>\r\n        <h4>{song.artist}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LibrarySong;\r\n","import LibrarySong from \"./LibrarySong\";\r\n\r\nconst Library = ({\r\n  songs,\r\n  setCurrentSong,\r\n  audioRef,\r\n  isPlaying,\r\n  setSongs,\r\n  libraryStatus,\r\n}) => {\r\n  return (\r\n    <div className={`library ${libraryStatus ? \"active_library\" : \"\"}`}>\r\n      <div className=\"library_songs\">\r\n        {songs.map((song) => (\r\n          <LibrarySong\r\n            key={song.id}\r\n            id={song.id}\r\n            setCurrentSong={setCurrentSong}\r\n            song={song}\r\n            songs={songs}\r\n            audioRef={audioRef}\r\n            isPlaying={isPlaying}\r\n            setSongs={setSongs}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Library;\r\n"],"sourceRoot":""}